import java.util .*;
public class Task1 {

    public class Main {
        public static void main(String[] args) {
            ex2();
        }

        static void ex2() {
        /*
        1. Р РµР°Р»РёР·СѓР№С‚Рµ 1 РёР· РІР°СЂРёР°РЅС‚РѕРІ РєР»Р°СЃСЃР° Cat РёР· РїСЂРµРґС‹РґСѓС‰РµРіРѕ Р·Р°РґР°РЅРёСЏ,
        РјРѕР¶РЅРѕ РёСЃРїРѕР»СЊР·РѕРІР°С‚СЊ РЅРµ РІСЃРµ РїСЂРёРґСѓРјР°РЅРЅС‹Рµ РїРѕР»СЏ Рё РјРµС‚РѕРґС‹.
        РЎРѕР·РґР°Р№С‚Рµ РЅРµСЃРєРѕР»СЊРєРѕ СЌРєР·РµРјРїР»СЏСЂРѕРІ СЌС‚РѕРіРѕ РєР»Р°СЃСЃР°, РІС‹РІРµРґРёС‚Рµ РёС… РІ РєРѕРЅСЃРѕР»СЊ.
        2. Р”РѕР±РµР№С‚РµСЃСЊ С‚РѕРіРѕ, С‡С‚РѕР±С‹ РїСЂРё РІС‹РІРѕРґРµ РІ РєРѕРЅСЃРѕР»СЊ РѕР±СЉРµРєС‚Р° С‚РёРїР° Cat,
        РІС‹РІРѕРґРёР»Р°СЃСЊ РµРіРѕ РєР»РёС‡РєР°, С†РІРµС‚ Рё РІРѕР·СЂР°СЃС‚ (РёР»Рё РґСЂСѓРіРёРµ РїР°СЂР°РјРµС‚СЂС‹ РЅР° РІР°С€Рµ СѓСЃРјРѕС‚СЂРµРЅРёРµ).

         */

        /*
        1. РЎРѕР·РґР°Р№С‚Рµ РјРЅРѕР¶РµСЃС‚РІРѕ, РІ РєРѕС‚РѕСЂРѕРј Р±СѓРґСѓС‚ С…СЂР°РЅРёС‚СЊСЃСЏ СЌРєР·РµРјРїР»СЏСЂС‹ РєР»Р°СЃСЃР° Cat - HashSet<Cat>.
        РџРѕРјРµСЃС‚РёС‚Рµ РІ РЅРµРіРѕ РЅРµРєРѕС‚РѕСЂРѕРµ РєРѕР»РёС‡РµСЃС‚РІРѕ РѕР±СЉРµРєС‚РѕРІ.
        2. РЎРѕР·РґР°Р№С‚Рµ 2 РёР»Рё Р±РѕР»РµРµ РєРѕС‚РѕРІ СЃ РѕРґРёРЅР°РєРѕРІС‹РјРё РїР°СЂР°РјРµС‚СЂР°РјРё РІ РїРѕР»СЏС…. РџРѕРјРµСЃС‚РёС‚Рµ РёС… РІРѕ РјРЅРѕР¶РµСЃС‚РІРѕ.
        РЈР±РµРґРёС‚РµСЃСЊ, С‡С‚Рѕ РІСЃРµ РѕРЅРё СЃРѕС…СЂР°РЅРёР»РёСЃСЊ РІРѕ РјРЅРѕР¶РµСЃС‚РІРѕ.
        3. РЎРѕР·РґР°Р№С‚Рµ РјРµС‚РѕРґ public boolean equals(Object o)
        РџСЂРѕРїРёС€РёС‚Рµ РІ РЅС‘Рј Р»РѕРіРёРєСѓ СЃСЂР°РІРЅРµРЅРёСЏ РєРѕС‚РѕРІ РїРѕ РїР°СЂР°РјРµС‚СЂР°Рј, С…СЂР°РЅРёРјС‹Рј РІ РїРѕР»СЏС….
        РўРѕ РµСЃС‚СЊ, РјРµС‚РѕРґ РґРѕР»Р¶РµРЅ РІРѕР·РІСЂР°С‰Р°С‚СЊ true, С‚РѕР»СЊРєРѕ РµСЃР»Рё Р·РЅР°С‡РµРЅРёСЏ РІРѕ РІСЃРµС… РїРѕР»СЏС… СЃСЂР°РІРЅРёРІР°РµРјС‹С… РѕР±СЉРµРєС‚РѕРІ СЂР°РІРЅС‹.
        4. Р’С‹РІРµРґРёС‚Рµ СЃРЅРѕРІР° СЃРѕРґРµСЂР¶РёРјРѕРµ РјРЅРѕР¶РµСЃС‚РІР° РёР· РїСѓРЅРєС‚Р° 2, СѓР±РµРґРёС‚РµСЃСЊ, С‡С‚Рѕ РґСѓР±Р»РёРєР°С‚С‹ СѓРґР°Р»РёР»РёСЃСЊ.
         */
            Cat cat = new Cat();
            cat.name = "Р’Р°СЃСЊРєР°";
            cat.age = 5;
            cat.ownerName = "Р’Р°СЃРёР»РёР№ РџРµС‚СЂРѕРІРёС‡";

            Cat cat1 = new Cat();
            cat1.name = "Р’Р°СЃСЊРєР°";
            cat1.age = 5;
            cat1.ownerName = "Р’Р°СЃРёР»РёР№ РџРµС‚СЂРѕРІРёС‡";

            Set<Cat> cats = new HashSet<>();
            cats.add(cat);
            cats.add(cat1);

            System.out.println(cats);
        }

        static void ex1() {
        /*
        1. РќР°РїРёС€РёС‚Рµ РјРµС‚РѕРґ, РєРѕС‚РѕСЂС‹Р№ Р·Р°РїРѕР»РЅРёС‚ РјР°СЃСЃРёРІ РёР· 1000 СЌР»РµРјРµРЅС‚РѕРІ СЃР»СѓС‡Р°Р№РЅС‹РјРё С†РёС„СЂР°РјРё РѕС‚ 0 РґРѕ 24.
        2. РЎРѕР·РґР°Р№С‚Рµ РјРµС‚РѕРґ, РІ РєРѕС‚РѕСЂС‹Р№ РїРµСЂРµРґР°Р№С‚Рµ Р·Р°РїРѕР»РЅРµРЅРЅС‹Р№ РІС‹С€Рµ РјР°СЃСЃРёРІ Рё СЃ РїРѕРјРѕС‰СЊСЋ Set
        РІС‹С‡РёСЃР»РёС‚Рµ РїСЂРѕС†РµРЅС‚ СѓРЅРёРєР°Р»СЊРЅС‹С… Р·РЅР°С‡РµРЅРёР№ РІ РґР°РЅРЅРѕРј РјР°СЃСЃРёРІРµ Рё РІРµСЂРЅРёС‚Рµ РµРіРѕ РІ РІРёРґРµ С‡РёСЃР»Р° СЃ РїР»Р°РІР°СЋС‰РµР№ Р·Р°РїСЏС‚РѕР№.
        Р”Р»СЏ РІС‹С‡РёСЃР»РµРЅРёСЏ РїСЂРѕС†РµРЅС‚Р° РёСЃРїРѕР»СЊР·СѓР№С‚Рµ С„РѕСЂРјСѓР»Сѓ:
        РїСЂРѕС†РµРЅС‚ СѓРЅРёРєР°Р»СЊРЅС‹С… С‡РёСЃРµР» = РєРѕР»РёС‡РµСЃС‚РІРѕ СѓРЅРёРєР°Р»СЊРЅС‹С… С‡РёСЃРµР» * 100 / РѕР±С‰РµРµ РєРѕР»РёС‡РµСЃС‚РІРѕ С‡РёСЃРµР» РІ РјР°СЃСЃРёРІРµ.
         */
            System.out.println(percentUniq(rndArr(10, 0, 10)));
        }

        static Integer[] rndArr(int count, int min, int max) {
            Integer[] arr = new Integer[count];
            Random random = new Random();
            for (int i = 0; i < arr.length; i++) {
//            arr[i] = (int) (Math.random() * (max - min) + min);
                arr[i] = random.nextInt(max - min + 1) + min;
            }
            System.out.println(Arrays.toString(arr));
            return arr;
        }

        static double percentUniq(Integer[] arr) {
            Set<Integer> set = new HashSet<>(Arrays.asList(arr));
            System.out.println(set);
            return set.size() * 100.0 / arr.length;
        }

        static void ex0() {
        /*
        1. РЎРѕР·РґР°Р№С‚Рµ HashSet, Р·Р°РїРѕР»РЅРёС‚Рµ РµРіРѕ СЃР»РµРґСѓСЋС‰РёРјРё С‡РёСЃР»Р°РјРё: {1, 2, 3, 2, 4, 5, 6, 3}.
        Р Р°СЃРїРµС‡Р°С‚Р°Р№С‚Рµ СЃРѕРґРµСЂР¶РёРјРѕРµ РґР°РЅРЅРѕРіРѕ РјРЅРѕР¶РµСЃС‚РІР°.
        2. РЎРѕР·РґР°Р№С‚Рµ LinkedHashSet, Р·Р°РїРѕР»РЅРёС‚Рµ РµРіРѕ СЃР»РµРґСѓСЋС‰РёРјРё С‡РёСЃР»Р°РјРё: {1, 2, 3, 2, 4, 5, 6, 3}.
        Р Р°СЃРїРµС‡Р°С‚Р°Р№С‚Рµ СЃРѕРґРµСЂР¶РёРјРѕРµ РґР°РЅРЅРѕРіРѕ РјРЅРѕР¶РµСЃС‚РІР°.
        3. РЎРѕР·РґР°Р№С‚Рµ TreeSet, Р·Р°РїРѕР»РЅРёС‚Рµ РµРіРѕ СЃР»РµРґСѓСЋС‰РёРјРё С‡РёСЃР»Р°РјРё: {1, 2, 3, 2, 4, 5, 6, 3}.
        Р Р°СЃРїРµС‡Р°С‚Р°Р№С‚Рµ СЃРѕРґРµСЂР¶РёРјРѕРµ РґР°РЅРЅРѕРіРѕ РјРЅРѕР¶РµСЃС‚РІР°.
         */
            Integer[] arr = new Integer[]{5, 2, 3, 2, 1, 4, 6, 3};
            HashSet<Integer> set1 = new HashSet<>(Arrays.asList(arr));
            LinkedHashSet<Integer> set2 = new LinkedHashSet<>(Arrays.asList(arr));
            TreeSet<Integer> set3 = new TreeSet<>(Arrays.asList(arr));

            System.out.println(set1);
            System.out.println(set2);
            System.out.println(set3);
        }
    }
}
